service: lahiyam-website-database

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  userTableName: ${self:custom.stage}-lahiyam-users-table
  postTableName: ${self:custom.stage}-lahiyam-posts-table
  sitePreferencesTableName: ${self:custom.stage}-lahiyam-site-preferences-table

provider:
  name: aws
  stage: dev
  region: us-east-1

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        # Generate a name based on the stage
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: username-index
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.postTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: status
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: userId-createdAt-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              NonKeyAttributes:
                - "title"
              ProjectionType: INCLUDE
    SitePreferencesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sitePreferencesTableName}
        AttributeDefintions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

  Outputs:
    UsersTableArn:
      Value:
        Fn::GetAtt:
          - UsersTable
          - Arn
      Export:
        Name: ${self:custom.stage}-LahiyamUsersTableArn
    PostsTableArn:
      Value:
        Fn::GetAtt:
          - PostsTable
          - Arn
      Export:
        Name: ${self:custom.stage}-LahiyamPostsTableArn
